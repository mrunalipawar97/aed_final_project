/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package catering.system.UI.clientRegistrationWorkArea;

import business.ApplicationSystem;
import business.Validation;
import catering.system.Enterprise.Enterprise;
import catering.system.Organization.Organization;
import catering.system.Users.UserAccount;
import catering.system.Users.UserAccountDirectory;
import catering.system.client.Client;
import catering.system.validations.ValidateDateOfBirth;
import catering.system.validations.ValidateEmailTextField;
import catering.system.validations.ValidateNumbers;
import catering.system.validations.ValidatePasswords;
import catering.system.validations.ValidatePhoneNumber;
import catering.system.validations.ValidateStrings;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;
import javax.swing.InputVerifier;
import javax.swing.JOptionPane;
import javax.swing.JPanel;

/**
 *
 * @author jeelkanzaria
 */
public class ClientRegistrationWorkAreaJPanel extends javax.swing.JPanel {

    /**
     * Creates new form clientRegistrationWorkAreaJPanel
     */
    private ApplicationSystem system;
    private JPanel userProcessContainer;
    private Organization organization;
    private Enterprise currentEnterprise;
    private Client client;
    
    public ClientRegistrationWorkAreaJPanel() {
        initComponents();
    }

    public ClientRegistrationWorkAreaJPanel(JPanel container, ApplicationSystem system, Enterprise enterprise) {
        initComponents();
        this.setVisible(true);
        this.system = system;
        this.userProcessContainer = container;
        this.currentEnterprise = enterprise;
        populateOrganizationNameCombobox();
        addInputVerifiers();
    }
    
    public void populateOrganizationNameCombobox(){
       organizationNameComboBox.removeAllItems();
       String type=(String) organizationTypeComboBox.getSelectedItem();
        ArrayList<Organization> orgDetail= currentEnterprise.getOrganizationDirectory().getOrganizationList();
        for(Organization o : orgDetail){
           if(o.getType().equals(type)){
              organizationNameComboBox.addItem(o);  
            }   
        }
    }

    
    private void addInputVerifiers() {
        InputVerifier stringValidation = new ValidateStrings();
        firstNameField.setInputVerifier(stringValidation);
        lastNameField.setInputVerifier(stringValidation);
        addressField1.setInputVerifier(stringValidation);
        addressField2.setInputVerifier(stringValidation);
        townField.setInputVerifier(stringValidation);
        occupationField.setInputVerifier(stringValidation);
        addressField1.setInputVerifier(stringValidation);
        addressField2.setInputVerifier(stringValidation);
        userNameJTxtField.setInputVerifier(stringValidation);
        
        InputVerifier passwordValidation = new ValidatePasswords();
        passwordField.setInputVerifier(passwordValidation);
        confirmPasswordField.setInputVerifier(passwordValidation);
        
        InputVerifier dobValidtion = new ValidateDateOfBirth();
        DobField.setInputVerifier(dobValidtion);
        
        InputVerifier numberValidation = new ValidateNumbers();
        zipCodeField.setInputVerifier(numberValidation);
        
        InputVerifier emailValidtion = new ValidateEmailTextField();
        emailIDField.setInputVerifier(emailValidtion);
     
         InputVerifier phnumberValidation = new ValidatePhoneNumber();
        phoneNumberField.setInputVerifier(phnumberValidation);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        firstName = new javax.swing.JLabel();
        firstNameField = new javax.swing.JTextField();
        LastName = new javax.swing.JLabel();
        lastNameField = new javax.swing.JTextField();
        dateOfBirth = new javax.swing.JLabel();
        addressField1 = new javax.swing.JFormattedTextField();
        address1 = new javax.swing.JLabel();
        DobField = new javax.swing.JFormattedTextField();
        address2 = new javax.swing.JLabel();
        addressField2 = new javax.swing.JTextField();
        town = new javax.swing.JLabel();
        townField = new javax.swing.JTextField();
        zipCode = new javax.swing.JLabel();
        zipCodeField = new javax.swing.JTextField();
        occupation = new javax.swing.JLabel();
        occupationField = new javax.swing.JTextField();
        emailID = new javax.swing.JLabel();
        emailIDField = new javax.swing.JTextField();
        emailID1 = new javax.swing.JLabel();
        emailIDField1 = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        genderComboBox = new javax.swing.JComboBox();
        phoneNumber = new javax.swing.JLabel();
        phoneNumberField = new javax.swing.JTextField();
        registerButton = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        userNameJTxtField = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        passwordField = new javax.swing.JPasswordField();
        jLabel5 = new javax.swing.JLabel();
        confirmPasswordField = new javax.swing.JPasswordField();
        jLabel6 = new javax.swing.JLabel();
        organizationNameComboBox = new javax.swing.JComboBox();
        jLabel7 = new javax.swing.JLabel();
        organizationTypeComboBox = new javax.swing.JComboBox();

        setBackground(new java.awt.Color(204, 204, 255));
        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setFont(new java.awt.Font("Helvetica Neue", 3, 24)); // NOI18N
        jLabel1.setText("Welcome to Catering Management System");
        add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 30, 520, -1));

        firstName.setText("First Name:");
        add(firstName, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 100, 100, -1));
        add(firstNameField, new org.netbeans.lib.awtextra.AbsoluteConstraints(230, 90, 170, -1));

        LastName.setText("Last Name:");
        add(LastName, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 140, -1, -1));
        add(lastNameField, new org.netbeans.lib.awtextra.AbsoluteConstraints(230, 130, 170, -1));

        dateOfBirth.setText("Date Of Birth (MM/DD/YYYY):");
        add(dateOfBirth, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 180, -1, -1));
        add(addressField1, new org.netbeans.lib.awtextra.AbsoluteConstraints(230, 210, 170, -1));

        address1.setText("Address Line1 : ");
        add(address1, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 220, -1, -1));
        add(DobField, new org.netbeans.lib.awtextra.AbsoluteConstraints(230, 170, 170, -1));

        address2.setText("Address Line2 : ");
        add(address2, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 260, -1, -1));
        add(addressField2, new org.netbeans.lib.awtextra.AbsoluteConstraints(230, 250, 170, -1));

        town.setText("Town/City: ");
        add(town, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 300, -1, -1));
        add(townField, new org.netbeans.lib.awtextra.AbsoluteConstraints(230, 290, 170, -1));

        zipCode.setText("Zip Code:");
        add(zipCode, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 340, -1, -1));
        add(zipCodeField, new org.netbeans.lib.awtextra.AbsoluteConstraints(230, 330, 170, -1));

        occupation.setText("Occupation:");
        add(occupation, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 380, -1, -1));
        add(occupationField, new org.netbeans.lib.awtextra.AbsoluteConstraints(230, 370, 170, -1));

        emailID.setText("Email Address:");
        add(emailID, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 420, -1, -1));
        add(emailIDField, new org.netbeans.lib.awtextra.AbsoluteConstraints(230, 410, 170, -1));

        emailID1.setText("Confirm Email Address:");
        add(emailID1, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 460, -1, -1));

        emailIDField1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                emailIDField1ActionPerformed(evt);
            }
        });
        add(emailIDField1, new org.netbeans.lib.awtextra.AbsoluteConstraints(230, 450, 170, -1));

        jLabel2.setText("Gender:");
        add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(520, 100, -1, -1));

        genderComboBox.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Choose gender", "Female", "Male", "Transgender", "Unknown" }));
        genderComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                genderComboBoxActionPerformed(evt);
            }
        });
        add(genderComboBox, new org.netbeans.lib.awtextra.AbsoluteConstraints(650, 100, 180, -1));

        phoneNumber.setText("Phone Number:");
        add(phoneNumber, new org.netbeans.lib.awtextra.AbsoluteConstraints(520, 140, -1, -1));

        phoneNumberField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                phoneNumberFieldActionPerformed(evt);
            }
        });
        add(phoneNumberField, new org.netbeans.lib.awtextra.AbsoluteConstraints(650, 140, 180, -1));

        registerButton.setText("REGISTER");
        registerButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                registerButtonActionPerformed(evt);
            }
        });
        add(registerButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(390, 590, 120, -1));

        jLabel3.setText("Username");
        add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(520, 180, -1, -1));
        add(userNameJTxtField, new org.netbeans.lib.awtextra.AbsoluteConstraints(650, 180, 180, -1));

        jLabel4.setText("Password");
        add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(520, 220, -1, -1));

        passwordField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                passwordFieldActionPerformed(evt);
            }
        });
        add(passwordField, new org.netbeans.lib.awtextra.AbsoluteConstraints(650, 220, 180, -1));

        jLabel5.setText("Confirm Password");
        add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(520, 260, -1, -1));
        add(confirmPasswordField, new org.netbeans.lib.awtextra.AbsoluteConstraints(650, 260, 180, -1));

        jLabel6.setText("Organization Name :");
        add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 540, 140, -1));

        add(organizationNameComboBox, new org.netbeans.lib.awtextra.AbsoluteConstraints(230, 530, 170, -1));

        jLabel7.setText("Organization Type:");
        add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 500, 140, -1));

        organizationTypeComboBox.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "School", "Office", "Hospital", "Government" }));
        organizationTypeComboBox.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                organizationTypeComboBoxItemStateChanged(evt);
            }
        });
        add(organizationTypeComboBox, new org.netbeans.lib.awtextra.AbsoluteConstraints(230, 490, 170, -1));
    }// </editor-fold>//GEN-END:initComponents

    private void emailIDField1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_emailIDField1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_emailIDField1ActionPerformed

    private void genderComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_genderComboBoxActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_genderComboBoxActionPerformed

    private void phoneNumberFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_phoneNumberFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_phoneNumberFieldActionPerformed

    private void passwordFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_passwordFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_passwordFieldActionPerformed

    private void registerButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_registerButtonActionPerformed
        // TODO add your handling code here:
        try
        {
         
         if(genderComboBox.getSelectedIndex()<1 )
         {
        JOptionPane.showMessageDialog(null, "Please Enter valid gender ","warning", JOptionPane.WARNING_MESSAGE);
              return;             
         }
         
         Date dateOfBirthVal = new SimpleDateFormat("MM/dd/yyyy").parse(DobField.getText()) ;
            // Calculate age using dob
            int age = Validation.calculateAge(dateOfBirthVal);
            
            String phoneNumber = phoneNumberField.getText();
            String firstName =   firstNameField.getText();
            String lastName = lastNameField.getText();
            String address1 = addressField1.getText();
            String address2 = addressField2.getText();
            String town = townField.getText();
            String zipCode = zipCodeField.getText();
            String emailId = emailIDField.getText();
            String confirmEmail = emailIDField1.getText();
            String occupation = occupationField.getText();
            String gender = (String)genderComboBox.getSelectedItem();
            String userName = userNameJTxtField.getText();
            String password = String.valueOf(passwordField.getPassword());
            String confirmPassword =String.valueOf(confirmPasswordField.getPassword());
            String organization = (String)organizationNameComboBox.getSelectedItem();
            String phnNo = phoneNumberField.getText();
               
            
            
            if(firstName != null && !firstName.isEmpty() &&
                lastName!= null && !lastName.isEmpty() &&
                address1!=null && !address1.isEmpty() &&
                    address2!=null && !address2.isEmpty() &&
                town!=null && !town.isEmpty() &&
                occupation!=null && !occupation.isEmpty() &&
                emailId!=null && !emailId.isEmpty() &&
                confirmEmail!=null && !confirmEmail.isEmpty() &&
                zipCode != null && !zipCode.isEmpty() &&
                gender!=null && !gender.isEmpty() && age > 0 && !phoneNumber.isEmpty()
              )
            {
              
                if(!(confirmEmail.equals(emailId)))
                {
                    JOptionPane.showMessageDialog(null, "Email Address does not match, Please Enter valid email Address","warning", JOptionPane.WARNING_MESSAGE);
                    return;
                }
                
                if(!(password.equals(confirmPassword)))
                    {
                        JOptionPane.showMessageDialog(null, "Password does not match, Please Enter valid Password Address","warning", JOptionPane.WARNING_MESSAGE);
                        return;
                    }
          
               
              
                UserAccountDirectory ua = this.system.getUserAccountDirectory();
                UserAccount user = this.system.getUserAccountDirectory().createUserAccount(userNameJTxtField.getText(), passwordField.getText(), "Client");
                Client c = client.addClient(firstName, lastName, dateOfBirthVal, address1, address2, town, zipCode, emailId, occupation, phnNo, gender);
                
               
                JOptionPane.showMessageDialog(null, "Your Profile has been created successfully", "success", JOptionPane.PLAIN_MESSAGE);
                resetFields();
                
            }
            else
            {
                JOptionPane.showMessageDialog(null, "Please Enter valid data in all the fields");
            }
        }
        
        catch(NumberFormatException npe)
        {
            JOptionPane.showMessageDialog(null, "Please Enter valid Number ! ");
        return;
        }
        catch(ParseException npe)
        {
            JOptionPane.showMessageDialog(null, "Please Enter data in all the fields");
           return;
        }
        catch(NullPointerException e )
        {
        JOptionPane.showMessageDialog(null, "Organization does not exist! ");  
          return;
        }
        catch(Exception e )
        {
        JOptionPane.showMessageDialog(null, "Please Enter data in all the fields");  
          return;
        }
    }//GEN-LAST:event_registerButtonActionPerformed

    private void organizationTypeComboBoxItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_organizationTypeComboBoxItemStateChanged
        // TODO add your handling code here:
        populateOrganizationNameCombobox();
    }//GEN-LAST:event_organizationTypeComboBoxItemStateChanged


    public void resetFields()
    {
     userNameJTxtField.setText("");
     passwordField.setText("");
     confirmPasswordField.setText("");
    firstNameField.setText("");
    lastNameField.setText("");
    DobField.setText("");
    addressField1.setText("");
    addressField2.setText("");
    townField.setText("");
    zipCodeField.setText("");
    occupationField.setText("");
    emailIDField.setText("");
    emailIDField1.setText("");
    phoneNumberField.setText("");
     
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JFormattedTextField DobField;
    private javax.swing.JLabel LastName;
    private javax.swing.JLabel address1;
    private javax.swing.JLabel address2;
    private javax.swing.JFormattedTextField addressField1;
    private javax.swing.JTextField addressField2;
    private javax.swing.JPasswordField confirmPasswordField;
    private javax.swing.JLabel dateOfBirth;
    private javax.swing.JLabel emailID;
    private javax.swing.JLabel emailID1;
    private javax.swing.JTextField emailIDField;
    private javax.swing.JTextField emailIDField1;
    private javax.swing.JLabel firstName;
    private javax.swing.JTextField firstNameField;
    private javax.swing.JComboBox genderComboBox;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JTextField lastNameField;
    private javax.swing.JLabel occupation;
    private javax.swing.JTextField occupationField;
    private javax.swing.JComboBox organizationNameComboBox;
    private javax.swing.JComboBox organizationTypeComboBox;
    private javax.swing.JPasswordField passwordField;
    private javax.swing.JLabel phoneNumber;
    private javax.swing.JTextField phoneNumberField;
    private javax.swing.JButton registerButton;
    private javax.swing.JLabel town;
    private javax.swing.JTextField townField;
    private javax.swing.JTextField userNameJTxtField;
    private javax.swing.JLabel zipCode;
    private javax.swing.JTextField zipCodeField;
    // End of variables declaration//GEN-END:variables

    
}
